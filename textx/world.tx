World:
    (
        ('places' '{'
            places += Place
        '}')
        ('objects' '{'
            objects *= Object
        '}')
        ('connections' '{'
            connections *= Connection
        '}')
        ('commands' '{'
            commands *= Command
        '}')
        ('flags' '{'
            flags *= Flag
        '}')
        player = Player 
        finish = Finish
    )#
;

Container:
    Place | Player | Object
;

Place:
    'place' name = WID '{'
        description = DescriptionSection
        contains = ContainsSection
        ('turns_in' ':' turns_in = INT)?
        (blockade = Blockade)?
    '}'
;

Object:
    'object' name = WID '{'
        description = DescriptionSection
        contains = ContainsSection
        'pickable' ':' pickable = BOOL
        ('container' ':' container = [Container])?
    '}'
;

ContainsSection:
    'contains' '{'
        objects *= [Object]
    '}'
;

Flag:
    'flag' name = WID '{'
        'activated' ':' activated = BOOL
        'action_on_true' ':' action_true = Action
        'action_on_false' ':' action_false = Action
    '}'
;

Action:
    '{'
        ('message' ':' message = STRING)?
        ('dependencies' ':' '[' dependencies += Condition [','] ']')?
    '}'
;

Condition:
    flag = [Flag] '==' value = BOOL
;

Command:
    'command' text += CommandText [','] '{'
        operation = Operation
    '}' 
;

CommandText:
    '"' predicate = WID (object = WID)? '"'
;

Operation:
    MessageOperation | CDMOperation | FlagOperation | RelocateOperation
;

MessageOperation:
    (
        ('message' ':' message = STRING)
        ('item' ':' item = [Object])?
        (located_prop = LocatedProp)?
    )#
;

CDMOperation:
    (
        (require_prop = RequireProp)+
        (cdm_props += CDMProp)
        ('success' ':' success = STRING)
        ('fail' ':' fail = STRING)
        (located_prop = LocatedProp)?
        (flag_prop = FlagProp)?
    )#
;

FlagOperation:
    (
        (flag_prop = FlagProp)
        ('success' ':' success = STRING)
        ('fail' ':' fail = STRING)
        (require_prop = RequireProp)*
        (located_prop = LocatedProp)?
    )#
;

RelocateOperation:
    (
        ('from' ':' from_ = [Place])
        ('to' ':' to_ = [Place])
        ('success' ':' success = STRING)
        ('fail' ':' fail = STRING)
        ('can_die' ':' can_die = BOOL)
        (require_prop = RequireProp)*
    )#
;

FlagProp:
    'flag' ':' flag = [Flag] '==' value = BOOL
;

RequireProp:
    RequirePlaceProp | RequireInventoryProp
;

RequirePlaceProp:
    'is_present' ':' '[' require += [Object] ']'
;

RequireInventoryProp:
    'is_carried' ':' '[' require += [Object] ']'
;

LocatedProp:
    'at' ':' located = [Place]
;

CDMProp:
    type = CDM ':' item = [Object]
;

DescriptionSection:
    '"""'
        'name' ':' name = /.*/
        'description' ':' description = /.*/
    '"""'
;

Blockade:
    'blockade' '{'
        blocks += Block
    '}'
;

Block:
    'flag' '=' flag = [Flag] ',' 'direction' '=' direction = Direction (',' 'allowed_turns' '=' turns = Turn)? 
;

Turn:
    value = INT
;

Connection:
    from_ = [Place] ',' direction = Direction ',' to_ = [Place] ';'
;

Player:
    'player' '{'
        'name' ':' name = WID
        'position' ':' position = [Place]
        'inventory' '{'
            items *= [Object]
        '}'
    '}'
;

Finish:
    'finish' '{'
        'position' ':' position = [Place]
        (flag_prop = FlagProp)?
    '}'
;

Direction:
    'N' | 'S' | 'E' | 'W'
;

CDM:
    'create' | 'delete' | 'move'
;

EntityKeywords:
    'place' | 'command' | 'object' |
    'flag' | 'player' | 'finish'
;

SectionKeywords:
    'places' | 'objects' | 'connections' | 'commands' | 'flags'
    'action_on_true' | 'action_on_false' | 'blockade'
;

CollectionKeywords:
    'contains' | 'dependencies' | 'is_present' | 'is_carried' | 'inventory' 
;

LocationKeywords:
    'from' | 'to' | 'at' | 'position'
;

PropertiesKeywords:
    'pickable' | 'container' | 'activated' |
    'message' | 'item' | 'success' | 'fail' |
    'can_die' | 'name' | 'description' | 'direction' | 
    'allowed_turns'
;

Keywords:
    EntityKeywords | SectionKeywords | PropertiesKeywords | 
    CollectionKeywords | PropertiesKeywords | CDM | Direction
;

WID: 
    !Keywords ID
;